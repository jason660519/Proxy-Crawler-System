version: '3.8'

services:
  html-to-markdown:
    build:
      context: ../..
      dockerfile: docker/html-to-markdown/Dockerfile
    container_name: html-to-markdown-converter
    environment:
      - PYTHONPATH=/app/src
      - LOG_LEVEL=INFO
      - CACHE_ENABLED=true
      - CACHE_TTL=3600
    volumes:
      # 掛載輸出目錄
      - ./output:/app/output
      # 掛載日誌目錄
      - ./logs:/app/logs
      # 掛載緩存目錄
      - ./cache:/app/cache
      # 掛載配置文件（如果有）
      - ./config:/app/config:ro
    ports:
      - "8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import html_to_markdown; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - html-converter-network

  # Redis 緩存服務（可選）
  redis:
    image: redis:7-alpine
    container_name: html-converter-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - html-converter-network

  # 監控服務（可選）
  prometheus:
    image: prom/prometheus:latest
    container_name: html-converter-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - html-converter-network

  # Grafana 儀表板（可選）
  grafana:
    image: grafana/grafana:latest
    container_name: html-converter-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    restart: unless-stopped
    networks:
      - html-converter-network

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  html-converter-network:
    driver: bridge